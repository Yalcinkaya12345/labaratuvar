week3_lesson_0_binomial

import sympy as sym
from sympy import Symbol
from sympy import pprint

p=Symbol('p')
x=Symbol('x')
n=Symbol('n')

my_f_3_part_0=sym.factorial(n)/(sym.factorial(x)*sym.factorial(n-x))
my_f_3_part_0

pprint(my_f_3_part_0)
print("---------------------")
my_f_3_part_1=p**x
my_f_3_part_1

pprint(my_f_3_part_1)
print("---------------------")
my_f_3_part_2=(1-p)**(n-x)
my_f_3_part_2

pprint(my_f_3_part_2)
print("---------------------")
my_f_3=my_f_3_part_0*my_f_3_part_1*my_f_3_part_2
pprint(my_f_3)

print("---------------------")
sym.plot(my_f_3.subs({p:0.5,n:50}), (x, 0, 50),title='binomial distribution plot for n=50')

week3_lesson_1_sympy_example_limit

from sympy import Symbol, Limit
t=Symbol('t')
St=5*t**2+2*t+8
t1=Symbol('t1')
delta_t=Symbol('delta_t')
St1=St.subs({t: t1})
St1_delta=St.subs({t: t1+ delta_t})
limit((St1_delta-St1)/delta_t ,delta_t, 0).doit()

week3_lesson_2_sympy_integral

from sympy import Symbol, exp, sqrt, pi, Integral
x= Symbol('x')
p=exp(-(x- 10)**2/2)/sqrt(2*pi)

Integral(p, (x, 11, 12)).doit().evalf()

