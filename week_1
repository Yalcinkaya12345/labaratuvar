#istenen bir sayının işlevsel bir kuvvetini veren fonksiyon

def  gücü ( a , b ):
    Eğer  b  ==  0 :
        dönüş  1
    elif  b  ==  1 :
        dönüş  a
    başka :
         a * gücü döndürme ( a , b - 1 )
baskı ( güç ( 4 , 3 ))

#recursive sürüm
def  gücü ( a , b ):
    Eğer  b  ==  0 :
        dönüş  1
    elif  b  ==  1 :
        dönüş  a
    başka :
        Eğer  B  %  2  ==  0 :
            dönüş  gücü ( a * a , b // 2 )
        başka :
            dönüş  gücü ( a * a , b // 2 ) * a
        #return a * gücü (a, b-1)
baskı ( güç ( 5 , 3 ))

#verilen bir tarafta ardışık olan sayılardaki en yüksek toplam ve listeyi sağ, sol olarak ikiye böldüğümüzde sol tarafa sağdan, sol tarafa sağdan başlakenki
liste_1 = [ 4 , - 3 , 5 , - 2 , - 1 , 2 , 6 , - 2 ]
max = 0
için  i  de  aralık ( 8 ):
    için  j  olarak  aralık ( I , 8 ):
        t = 0
        için  k  içinde  aralıkta ( i , j ):
            t = t + liste_1 [ k ]
    Eğer  azami < t :
        max = t
        i_1 , i_2 = i , j
baskı ( maks , i_1 , i_2 )
